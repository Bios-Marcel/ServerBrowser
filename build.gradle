buildscript {
    repositories {
        jcenter()
        maven { url 'https://jitpack.io' }
    }

    ext.kotlin_version = '1.2.51'
    dependencies {
        //Used to build a shadow jar (contains all its dependencies, putting aside the jre)
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.+'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4'
        classpath 'com.layer:gradle-git-repo-plugin:2.0.+'
    }
}

apply plugin: 'application'
apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'eclipse'
apply plugin: 'idea'

mainClassName = 'com.msc.serverbrowser.Client'

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}

sourceSets {
    demo.kotlin.srcDirs += 'src/demo/kotlin'
    demo.compileClasspath += main.output
    demo.compileClasspath += main.compileClasspath
}

dependencies {
    //Used for registering global keyboard listeners in order to enable custom keybindings
    demoCompile 'com.1stleg:jnativehook:2.1.+'

    //Used for sotrage of settings and so on (user data)
    compile 'org.xerial:sqlite-jdbc:3.19.+'
    //Used to deserialize the replies i get from sa-mp servers api
    compile 'com.eclipsesource.minimal-json:minimal-json:0.9.+'
    //Used to displays os independent tray notifications
    compile 'com.github.Bios-Marcel:TrayNotification:1.3.1.1'
    //Used to update the application by using the latest releases from github
    compile 'org.kohsuke:github-api:1.89'
    //Used to guess the charsets, that the sa-mp servers are using in order display names correctly
    compile 'com.github.albfernandez:juniversalchardet:2.0.+'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.0-M4'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.0.0-M4'
}

/*
* Provide a fixed version of gradle for people building this project.
*/
wrapper {
    gradleVersion = gradleWrapperVersion
}

apply plugin: 'com.github.johnrengelman.shadow'

shadowJar {
    baseName = 'launcher'
    classifier = null
    version = null

    /*
    * WARNING! Changes to excludes/includes only seem to take effect after a "clean" with gradle.
    * I am not sure where the bug lies, but this should not happen with gradle...
    */

    //Excluding binary stuff for unsupported platforms
    exclude 'org/sqlite/native/Linux/android-arm/**'
    exclude 'org/sqlite/native/Linux/arm/**'
    exclude 'org/sqlite/native/Linux/armv6/**'
    exclude 'org/sqlite/native/Linux/armv7/**'
    exclude 'org/sqlite/native/Linux/ppc64/**'
    exclude 'org/sqlite/native/Linux/x86/**'
    exclude 'org/sqlite/native/FreeBSD/**'

    //If you are still using 32-bit ... fuck you ;)
    exclude 'org/sqlite/native/Windows/x86/**'

    //Trash
    exclude 'META-INF/maven/**'

    //Merges all service file under "META-INF/services" to one
    mergeServiceFiles()
}